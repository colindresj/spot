/*! normalize.css v3.0.1 | MIT License | git.io/normalize */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11 and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background: transparent; }

/**
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box; }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

/**
 * Base Component `html`
 *
 * The root component. Roots for `rem` value are set here.
 */
html {
  font: 1em sans-serif;
  line-height: 1.5em;
  min-height: 100%;
  overflow-y: scroll; }

*, *:before, *:after {
  box-sizing: border-box; }

/**
 * Base Component `table`
 *
 * A table for displaying information in an organized manner. This component is
 * best applied to table elements. By default it has a 1px border in
 * `$dark-gray`, collapsed borders and no border spacing.
 *
 * <table class="table table--bordered table--hoverRow">
 *   <colgroup>
 *     <col class="table-col--oneEigth">
 *     <col>
 *   </colgroup>
 *   <thead>
 *     <tr>
 *       <th></th>
 *       <th>Header 2</th>
 *       <th>Header 3</th>
 *     </tr>
 *   </thead>
 *   <tbody>
 *     <tr>
 *       <td>Datum 1</td>
 *       <td>Datum 2</td>
 *       <td>Datum 3</td>
 *     </tr>
 *       <tr>
 *       <td>Datum 1</td>
 *       <td>Datum 2</td>
 *       <td>Datum 3</td>
 *     </tr>
 *   </tbody>
 * </table>
 *
 * 1. Properly align cells that span mutiple rows or columns.
 */
[colspan] {
  text-align: center; }

[colspan="1"] {
  text-align: left; }

[rowspan] {
  vertical-align: middle; }

[rowspan="1"] {
  vertical-align: top; }

.table {
  border: 1px solid #444444; }

/**
 * Modifier `table--*`
 *
 * A `table` modifier that sets the table width.
 *
 * 1. Width based modifiers (ex. table--oneThird) will determine the length of
 *    the table in percentages, and so are relative to the width of its parent.
 *    The `$table-widths` map specifies all the table width modifiers available.
 */
.table--oneEigth {
  width: 12.5%; }

.table--oneFourth {
  width: 25%; }

.table--oneThird {
  width: 33.33%; }

.table--threeEigths {
  width: 37.5%; }

.table--oneHalf {
  width: 50%; }

.table--fiveEigths {
  width: 62.5%; }

.table--twoThirds {
  width: 66.666%; }

.table--threeQuarters {
  width: 75%; }

.table--sevenEigths {
  width: 87.5%; }

.table--full {
  width: 100%; }

.table--striped tbody tr:nth-of-type(odd) {
  background-color: #cccccc; }

.table--bordered th,
.table--bordered td {
  border: 1px solid #444444; }

.table--borderedHorizontal tr {
  border-bottom: 1px solid #444444; }

.table--borderedVertical th,
.table--borderedVertical td {
  border-right: 1px solid #444444; }

.table--hoverRow tbody tr:hover {
  background: #cccccc; }

/**
 * Base Element `table-col`
 *
 * A `table-col` element that consists of a single modifier and no unmodified
 * element. The modifier attribute sets proportional column widths and relies on
 * the `$table-widths` map from above.
 */
.table-col--oneEigth {
  width: 12.5%; }

.table-col--oneFourth {
  width: 25%; }

.table-col--oneThird {
  width: 33.33%; }

.table-col--threeEigths {
  width: 37.5%; }

.table-col--oneHalf {
  width: 50%; }

.table-col--fiveEigths {
  width: 62.5%; }

.table-col--twoThirds {
  width: 66.666%; }

.table-col--threeQuarters {
  width: 75%; }

.table-col--sevenEigths {
  width: 87.5%; }

.table-col--full {
  width: 100%; }

/**
 * Base Component `code`
 *
 * <code class="code--highlighted">var $ = {};</code>
 *
 * A `code` component that consists of a two modifiers and no unmodified
 * component class. The `--highlighted` modifier provides simple highlighting
 * styles. A background color, small border-radius and padding is applied. The
 * text is shrunken down as a result of the additional padding.
 *
 * The `--keyboard` modifier provides highlighting for input that is typically
 * entered using the keyboard.
 *
 * 1. Prevent code from breaking onto two lines.
 */
.code--highlighted,
.code--keyboard {
  border-radius: 5px;
  font-size: .85em;
  padding: 2px 3px;
  white-space: nowrap; }

.code--highlighted {
  background-color: whitesmoke;
  color: #434343; }

.code--keyboard {
  background-color: #1a1a1a;
  color: #e6e6e6; }

/**
 * Base Component `img`
 *
 * <img class="img--center" src="/path/to/image" alt="Alt Text">
 *
 * An `img` component that consists of a number of modifiers and no unmodified
 * component class. To use an unmodified component, rely on the native `img`
 * element.
 */
figure > img {
  display: block; }

.img--fluid, .img--responsive {
  max-width: 100%; }

.img--responsive {
  height: auto; }

.img--right {
  float: right;
  margin: 0 0 24px 24px; }

.img--left {
  float: left;
  margin: 0 24px 24px 0; }

.img--center {
  display: block;
  margin: 0 auto 24px; }

.img--rounded {
  border-radius: 5px; }

.img--circle {
  border-radius: 50%; }

/**
 * Base Component `heading[size]`
 * <h1>
 *   The Title
 * </h1>
 *
 * A number of `heading` components that can be used to display information. A
 * standard `h1`-`h6` element can be used predictably, however the individual
 * class may also be used for more flexibility as well. For example, you can
 * style a form legend with the `.headingTwo` to turn it into a `headingTwo`
 * component without relying on the `h2` element.
 */
h1,
.headingOne {
  font-size: 36px;
  font-size: 2.25rem; }

h2,
.headingTwo {
  font-size: 30px;
  font-size: 1.875rem; }

h3,
.headingThree {
  font-size: 24px;
  font-size: 1.5rem; }

h4,
.headingFour {
  font-size: 22px;
  font-size: 1.375rem; }

h5,
.headingFive {
  font-size: 18px;
  font-size: 1.125rem; }

h6,
.headingSix {
  font-size: 16px;
  font-size: 1rem; }

h1, h2, h3, h4, h5, h6,
.headingOne, .headingTwo,
.headingThree, .headingFour,
.headingFive, .headingSix {
  font-weight: bold;
  line-height: 1.4; }

/**
 * Base Component `subheading[size]`
 * <small class="subheadingOne">
 *   The Subtitle
 * </small>
 *
 * A subheading that can be used to add additional content below or beside a
 * heading. This component is best applied to heading elements when standing
 * alone, or `span` or `small` elements when combined with nested inside a
 * `heading` component.
 */
.subheadingOne, .subheadingOne--block {
  font-size: 22.5px;
  font-size: 1.40625rem; }

.subheadingTwo, .subheadingTwo--block {
  font-size: 18.75px;
  font-size: 1.17188rem; }

.subheadingThree, .subheadingThree--block {
  font-size: 15px;
  font-size: 0.9375rem; }

.subheadingFour, .subheadingFour--block {
  font-size: 13.75px;
  font-size: 0.85938rem; }

.subheadingFive, .subheadingFive--block {
  font-size: 11.25px;
  font-size: 0.70313rem; }

.subheadingSix, .subheadingSix--block {
  font-size: 10px;
  font-size: 0.625rem; }

.subheadingOne, .subheadingOne--block, .subheadingTwo, .subheadingTwo--block,
.subheadingThree,
.subheadingThree--block, .subheadingFour, .subheadingFour--block,
.subheadingFive,
.subheadingFive--block, .subheadingSix, .subheadingSix--block {
  font-weight: normal;
  line-height: 1.25; }

/**
 * Modifier `subheading[size]--block`
 *
 * A `subheading[size]` modifier sets the display type for the subheading. The
 * subheading may be used inside a naturally inline element, such as a `span`,
 * so this modifier lends `block` display to those types of elements.
 */
.subheadingOne--block, .subheadingTwo--block,
.subheadingThree--block, .subheadingFour--block,
.subheadingFive--block, .subheadingSix--block {
  display: block; }

/**
 * Base Component `p`
 *
 * <p>
 *   Vestibulum id ligula porta felis euismod semper. Cras justo odio, dapibus
 *   ac facilisis in, egestas eget quam.
 * </p>
 *
 * A non-modifed component that relies on the `p` element.
 */
p {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
  font-family: inherit;
  font-weight: normal;
  margin-left: 0;
  margin-right: 0;
  margin-top: 0;
  text-rendering: optimizeLegibility; }

.lede {
  font-size: 21.344px;
  font-size: 1.334rem; }

/**
 * Base Component `list`
 *
 * <ul>
 *   <li>List item</li>
 *   <li>List item</li>
 *   <li>List item</li>
 * </ul>
 *
 * A list for displaying information in an organized manner. This component is
 * best applied to table elements. By default it has a 1px border in
 * `$dark-gray`, collapsed borders and no border spacing.
 *
 * 1. Remove any vertical spacing that might come in form nested lists.
 */
li > ul,
li > ol,
li > dl {
  margin-bottom: 0; }

/**
 * Modifier `list--[list-style-type]`
 *
 * A `list` modifier that sets the `list-style-type`. Relies on the
 * `$list-style-types` map below.
 *
 * <ul class="list--disc">
 *   <li>List item</li>
 *   <li>List item</li>
 *   <li>List item</li>
 * </ul>
 *
 * 1. The `--numbered` modifier is offered so you can style a list with numbers
 *    without relying on the `ol` element.
 * 2. Removes the default padding on list elements.
 */
.list--circle {
  list-style-type: circle; }

.list--dot {
  list-style-type: disc; }

.list--numbered {
  list-style-type: decimal; }

.list--square {
  list-style-type: square; }

.list--unstyled {
  list-style-type: none; }

.list--unstyled {
  padding-left: 0; }

/**
 * Modifier `list--description`
 *
 * A `list` modifier that styles the contents of a description list. Best used
 * on a `dl` element, but can be styled with other elements by using the
 * `.list--description` class and the appropriate element classes.
 *
 * 1. Remove the default `margin-left` applied to dd elements.
 */
dl dt,
dl .list--description-title,
.list--description dt,
.list--description .list--description-title {
  font-weight: bold; }
dl dd,
dl .list--description-body,
.list--description dd,
.list--description .list--description-body {
  margin-left: 0; }

/**
 * Base Component `form`
 *
 * A form component for capturing user submitted data. This component is
 * best applied to `form` elements. By default it has ...
 *
 * <form class="form">
 *
 * </form>
 */
fieldset {
  padding: 24px; }

textarea,
select,
input[type='email'], input[type='number'], input[type='password'], input[type='search'], input[type='tel'], input[type='text'], input[type='url'] {
  font-size: 13.6px;
  font-size: 0.85rem;
  padding: 6px;
  padding: 0.375rem;
  margin-top: 12px;
  margin-top: 0.75rem;
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
  display: block;
  line-height: 1.2;
  width: 100%; }
  textarea:first-child,
  select:first-child,
  input[type='email']:first-child, input[type='number']:first-child, input[type='password']:first-child, input[type='search']:first-child, input[type='tel']:first-child, input[type='text']:first-child, input[type='url']:first-child {
    margin-top: 0; }
  textarea:last-child,
  select:last-child,
  input[type='email']:last-child, input[type='number']:last-child, input[type='password']:last-child, input[type='search']:last-child, input[type='tel']:last-child, input[type='text']:last-child, input[type='url']:last-child {
    margin-bottom: 0; }

select[multiple],
select[size] {
  display: block;
  height: auto; }
